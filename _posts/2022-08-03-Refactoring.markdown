---
layout: post
title: "[Etc] Refactoring = Jenga"
date: 2022-08-04 22:00:00 +0900
categories: Etc
---

## Refactoring = Jenga

최근에 리팩토링을 하며 어떠한 희열을 느꼈다.😆

<br/>

> ### 리팩토링(Code Refactoring)  
> 결과의 변경 없이 코드의 구조를 재조정함  
> [출처 wikipedia](https://ko.wikipedia.org/wiki/%EB%A6%AC%ED%8C%A9%ED%84%B0%EB%A7%81)

<br/>

통상적으로 사용되는 git commit rule 에서 새로운 기능을 구현하는 `feat`(feature) 와 동등하게 자리잡고있는 `refactor`(refactoring) 를 보면, 코딩에서 기능을 구현하는 작업 만큼이나 그 비중이 크다는 것을 알 수 있다.

리팩토링을 경험하기 전에는, 리팩토링이 굉장히 재미없는 작업이라고 생각했다. 왜냐하면 이미 구현이 완료되어 잘 작동하고 있는 기능을 눈에 보이는 변화 없이 개선하는 작업이기 때문에, 새로운 기능이 작동했을 때의 성취감이 없을것이라고 생각했기 때문이다.

하지만 그것은 코딩 꿈나무의 잘못된 생각이었다.😶

<br/>

### Refactoring = Jenga

내가 경험해본 바 리팩토링은 마치 젠가 같았다.  
젠가같은 재미가 있다.  

젠가는 아래쪽의 나무 블럭을 빼서 위에 쌓는 작업의 연속이다. 나무 블럭을 뺄 때에는 "이걸 빼면 무너지지 않을까." 하는 긴장감을, 그리고 빼서 올렸을 때에는 그대로 유지되는 모습에 희열을 느낀다.

리팩토링도 그렇다. "이 코드를 제거해도 기존처럼 작동할까." 라는 긴장감이 있고, 코드를 제거했을 때에도 그대로 유지되는 모습에 희열을 느낀다. 보다 적은 코드, 적은 리소스들로 기존과 같은 동작을 구현함으로서 한 걸음 더 효율적인 코드가 되는 과정. 리팩토링은 정말 새로운 기능 구현 만큼이나 재미있는 것 같다.

이상 적어보고 싶던 포스트✏️