1:"$Sreact.fragment"
2:I[30372,["/_next/static/chunks/48796fcff804b0d1.js","/_next/static/chunks/2298bc66cf7be31b.js"],"default"]
3:I[33014,["/_next/static/chunks/48796fcff804b0d1.js","/_next/static/chunks/2298bc66cf7be31b.js"],"default"]
5:I[71236,["/_next/static/chunks/48796fcff804b0d1.js","/_next/static/chunks/2298bc66cf7be31b.js"],"OutletBoundary"]
7:I[19756,["/_next/static/chunks/48796fcff804b0d1.js","/_next/static/chunks/2298bc66cf7be31b.js"],"AsyncMetadataOutlet"]
9:I[71236,["/_next/static/chunks/48796fcff804b0d1.js","/_next/static/chunks/2298bc66cf7be31b.js"],"ViewportBoundary"]
b:I[71236,["/_next/static/chunks/48796fcff804b0d1.js","/_next/static/chunks/2298bc66cf7be31b.js"],"MetadataBoundary"]
c:"$Sreact.suspense"
e:I[40794,[],"default"]
:HL["/_next/static/chunks/abb255be898e4f2b.css","style"]
:HL["/_next/static/media/797e433ab948586e-s.p.dbea232f.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/caa3a2e1cccd8315-s.p.853070df.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
0:{"P":null,"b":"mBZCD3C2QLpnLSfkcMaCm","p":"","c":["","posts","js-basic",""],"i":false,"f":[[["",{"children":["posts",{"children":[["slug","js-basic","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/abb255be898e4f2b.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"geist_a71539c9-module__T19VSG__variable geist_mono_8d43a2aa-module__8Li5zG__variable","children":[["$","div",null,{"style":{"width":"100%","borderBottom":"1px solid #ffe69c","background":"#fff3cd","color":"#664d03"},"role":"status","aria-live":"polite","children":["$","div",null,{"style":{"maxWidth":760,"margin":"0 auto","padding":"0.5rem 1rem","fontSize":14,"lineHeight":1.5},"children":"현재 Jekyll에서 Next.js로 마이그레이션 중입니다. 디자인 적용 전으로, 일부 레이아웃과 기능이 임시 상태일 수 있어요."}]}],["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}]}]]}],{"children":["posts",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","js-basic","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",[["$","script","script-0",{"src":"/_next/static/chunks/e3afcda4c80f253c.js","async":true,"nonce":"$undefined"}]],["$","$L5",null,{"children":["$L6",["$","$L7",null,{"promise":"$@8"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,[["$","$L9",null,{"children":"$La"}],["$","meta",null,{"name":"next-size-adjust","content":""}]],["$","$Lb",null,{"children":["$","div",null,{"hidden":true,"children":["$","$c",null,{"fallback":null,"children":"$Ld"}]}]}]]}],false]],"m":"$undefined","G":["$e",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/chunks/abb255be898e4f2b.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]]],"s":false,"S":true}
f:T2b33,<p>✔ LikeLion Core Curriculum React PGL 준비의 일환으로 Coding Angma 자바스크립트 기초 강좌를 수강하며 정리한 내용이다.<br>
<a href="https://www.youtube.com/watch?v=KF6t61yuPCY&#x26;t=481s">Coding Angma JavaScript Basic 100min ></a></p>
<h4><strong>웹 사이트 구성 요소</strong></h4>
<ul>
<li>HTML(Hyper Text Markup Language) : 웹사이트의 뼈대를 맡는다.</li>
<li>CSS(Cascading Style Sheet) : 웹사이트의 디자인을 맡는다.</li>
<li>JS(Java Script) : 크로스플랫폼(Cross Platform, 여러 종류의 플랫폼에서 동작)이며, 객체지향스크립트언어로 웹사이트의 동작을 담당한다.

</li>
</ul>
<h4><strong>변수 Variable</strong></h4>
<p>{% highlight javascript %}
name = "Mike";
age = 30;
// 세미콜론을 생략가능하지만 붙이도록하자.
{% endhighlight %}
</p>
<h4><strong>변수명 선언 규칙.</strong></h4>
<ol>
<li>변수명으로는 문자, 숫자, $, _ 만 사용할 수 있다.</li>
<li>첫글자는 숫자가 올 수 없다.</li>
<li>예약어는 변수명으로 사용이 불가능하다.</li>
<li>상수명은 관례상 대문자로 표기하도록한다.</li>
<li>변수명은 이해하기 쉽도록 선언하자.

</li>
</ol>
<h4><strong>출력 함수</strong></h4>
<ul>
<li>alert() : 경고창을 띄우는 함수</li>
<li>console.log() : 콘솔창에 출력하는 함수</li>
<li>prompt(text, default value) : 창을 띄워 값을 입력받는 함수.</li>
<li>confirm() : 창을 띄워 확인받는 함수. 확인은 true, 취소는 false 를 반환한다.</li>
</ul>
<p>기본 창을 띄워 출력하는 함수들은 사용이 매우 쉽고 간편하다는 장점이있지만,
동작시에 사용자가 액션을 취할 때 까지 스크립트가 일시정지된다는 것과 스타일링이 불가능하다는 단점이 있다.

</p>
<h4><strong>선언</strong></h4>
<ul>
<li>let : 유일한 변수 선언. 기존에 한 번 선언된 변수명을 let으로 다시 선언하는 경우 에러. 값 자체는 변경 가능하며, let을 사용하지 않고 값을 변경해주면 된다.</li>
<li>const : 절대 바뀌지 않는 상수 값을 선언할때 이용하며, 따라서 구분에 용이하도록 주로 대문자로 작성한다.
Tip : 처음에는 모든 변수를 const로, 그리고 값의 변화가 필요한 변수만 let을 이용하여 선언하도록 하자.

</li>
</ul>
<h4><strong>자동 형변환</strong></h4>
<p>자바스크립트에도 자동형변환이 존재하며 이는 뜻하지 않은 오류를 일으킬 수 있으므로 유의하도록 한다.

</p>
<h4><strong>명시적 형변환</strong></h4>
<p>자동형변환으로 인한 오류를 피하기 위해서, 더 이해하기 쉬운 코드를 위해서 명시적 형 변환이 필요하다.
(특히 prompt를 통해서 입력받은 값은 문자형이기 때문에 숫자 값 등을 입력받을때에도 많이 사용된다.)</p>
<ul>
<li>string() : 문자형으로 변환</li>
<li>Number() : 숫자형으로 변환
<ul>
<li>Number("text") -> NaN</li>
<li>Number(true) -> 1</li>
<li>Number(false, null) -> 0</li>
<li>Number(undefined) -> NaN</li>
</ul>
</li>
<li>Boolean() : 논리형으로 변환 + Boolean(Everything) -> true + Boolean(0, "", null, undefined, NaN) -> false

</li>
</ul>
<h4><strong>비교연산자</strong></h4>
<ul>
<li>== 동등연산자 : 값만 비교한다. 1 == "1"</li>
<li>=== 일치연산자 : 타입까지 비교한다. 1 != "1"

&#x26;&#x26; AND

|| OR

! NOT

</li>
</ul>
<h4><strong>조건문</strong></h4>
<p>{% highlight javascript %}
if( 조건1 ) {
code;
} else if( 조건2 ) {
code;
} else {
code;
}
{% endhighlight %}
</p>
<h4><strong>반복문</strong></h4>
<ul>
<li>for문
주로 사용되는 반복문이다.
{% highlight javascript %}
for (선언; 조건; 증감){
code;
}
{% endhighlight %}
</li>
<li>do-while문
적어도 1회 코드가 실행된다는 차이가 있다.
{% highlight javascript %}
do {
code;
} while (
조건
)
{% endhighlight %}
</li>
</ul>
<h4><strong>분기분</strong></h4>
<ul>
<li>break : 반복을 멈추고 반복문 자체를 빠져나온다.</li>
<li>continue : 이번 반복을 멈추고 다음 반복으로 넘어간다.

</li>
</ul>
<h4><strong>switch case</strong></h4>
<p>{% highlight javascript %}
switch(평가){
case A :
// A일때 코드
break; // break를 붙여주지 않으면 case A는 아래 경우의 코드까지 모두 실행하므로 꼭 넣기.
case B :
// B일때 코드
break;
case C :
// B일때 코드
break;
default :
// default 코드
}
{% endhighlight %}

</p>
<h4><strong>함수 선언문</strong></h4>
<p>{% highlight javascript %}
function funcName(parm1, parm2, parm3...){
console.log(<code>Hello, ${변수 또는 식}</code>);
// javascript의 fstring과 유사한 문법을 가지고 있다.
}
{% endhighlight %}

</p>
<p><em>지역변수 존재. 함수 내에서 선언한 변수는 함수 내에서만 사용할 수 있다.</em>
<em>let을 이용해서 동일한 변수명을 가진 변수 선언이 불가하다고 하였으나, 함수 내에서 지역변수로의 선언은 오류를 일으키지 않는다(전역변수와 지역변수 서로 간섭하지 않음)</em>

</p>
<h4><strong>자바스크립트만의 강력한 OR(||) Operator</strong></h4>
<p>자바스크립트의 OR 연산은 "첫 번째 TRUTH를 찾고 원래 값을 반환"한다.<br>
OR 연산 자체는 가장 왼쪽부터 오른쪽 순서로 피연산자를 boolean 형으로 변환한 후 평가하고 결과를 반환하는 것이 기본이다. 여기에서 자바스크립트는 반환시 boolean으로 변환하기 전 형태를 반환하는데 이는 다음과 같이 사용할 수 있다.

{% highlight javascript %}
function sayHello(name){
let newName = name || 'friend';
}
{% endhighlight %}

위의 코드에서 ||연산자는 name을 먼저 평하가여 참(입력)일 경우 해당 값을 반환, 거짓(undefined, 미입력)일 경우 그 다음 값인 'friend'(true)를 평가하여 'friend'를 리턴하게 된다.<br>
결과적으로 미입력시 'friend'를 default값으로 가져가는 코드가 되는 것이다.

</p>
<h4><strong>return</strong></h4>
<p>모든 함수는 return을 통해 별도로 지정하지 않아도 undefined를 default로 반환한다.<br>
return문은 실행 즉시 오른쪽의 값을 반환하고 종료하기 때문에 함수 종료 목적으로도 사용된다.<br>

</p>
<h4><strong>힘수 TIP</strong></h4>
<ul>
<li>하나의 함수가 한 작업만 실행할 수 있도록 쪼개어 사용하기.</li>
<li>변수 명과 마찬가지로 읽기 쉽고 어떠한 기능을 하는지 예측할 수 있는 이름 짓기.

</li>
</ul>
<h4><strong>함수 표현식</strong></h4>
<p>이름이 없는 함수를 만들고 변수에 해당 함수를 할당한다.
사용하는 방식은 함수 선언문과 동일하지만, 차이점은 호출할 수 있는 타이밍이다.<br>

javascript는 인터프리터언어(위에서 한 줄씩 순차적으로 실행되는 언어)이지만, 함수 선언문은 어디에서나 호출 가능하다. 이는 Hoisting 때문인데,<br>
Hoisting : javascript는 초기화 단계에서 코드 내 선언된 함수를 찾아 생성해둔다.<br>

함수표현식은 이렇게 실행되지 않는다. 코드가 한 줄씩 실행되며 해당 표현식에 도달하여야 함수가 생성된다.

</p>
<h4><strong>화살표함수(arrow function)</strong></h4>
<p>화살표 함수는 ES6이후 활발하게 이용되고 있다.
{% highlight javascript %}
const name = (parm1, parm2) => {
code;
return value;
}
const name = parm1 => value
const name = () => (value)
{% endhighlight %}
<em>파라미터가 하나일 경우 괄호 생략 가능.</em><br>
<em>코드 없이 리턴문만 있을경우 소괄호 이용 가능</em><br>
<em>리턴문이 한줄이라면 소괄호마저 생략 가능</em><br>
<em>변수 없을 경우 괄호 생략 불가능.</em><br>

</p>
<h4><strong>객체(Object)</strong></h4>
<p>{% highlight javascript %}
const objectName = {
key1 = value1,
key2 = value2, //마지막 줄에도 쉼표 넣는게 코드 작성 및 수정에 용이.
...
}
{% endhighlight %}</p>
<p>점이나 대괄호를 이용하여 접근 및 추가 가능하다.</p>
<p>{% highlight javascript %}
// 접근
object1.key1;
object1['key1'];
// 추가
object1.key1=value1;
object1['key1']=value1;
//삭제
delete object1.key1;</p>
<p>{
name : name,
age : age,
hobby : 'football',
}
//위 코드는 아래와 같이 축약하여 사용가능하다.
{
name,
age,
hobby : 'football'
}</p>
<p>property1 in Object1
// property가 Object내에 존재하는지 확인 가능한 in</p>
<p>if(!('age' in user)||user.age&#x3C;20>)
//user 객체에 'age' property가 없거나 20 미만인 경우.</p>
<p>for(x in Object1){
console.log(Object1[x])
}
//Object내 모든 key들의 value를 출력하는 코드
{% endhighlight %}

</p>
<h4><strong>메소드(Method)</strong></h4>
<p>객체에 property로 할당된 함수를 말한다.</p>
<p>{% highlight javascript %}
const object1 = {
fly : function(){
code;
}
}
//function 키워드 생략 가능
const object1 = {
fly(){
code;
}
}
{% endhighlight %}</p>
<p>this : 현재 객체 호출
{% highlight javascript %}
const user = {
name : 'mike',
sayHello(){
console.log(<code>Hello, I'm ${this.name}</code>);
}
}</p>
<p>user.sayHello();
//호출시 sayHello() 앞의 user가 this가 된다. this는 Runtime에 의해 결정.
{% endhighlight %}
this가 포함된 함수를 선언할 때에 함수 선언문을 사용하면 정상 동작하지만 화살표함수를 사용하여 선언했다면 동작이 달라짐을 유의한다.<br>
화살표함수는 this를 가지고 있지 않으므로, this를 외부에서 전역객체를 호출한다.<br>
<em>ex) 브라우저에서 전역객체는 window, Node js에서 전역객체는 global</em><br>
따라서 객체 내에서 함수를 선언할때에는 화살표 함수를 사용하지 않는 것이 좋다.

</p>
<h4><strong>배열(Array)</strong></h4>
<p>배열은 순서가 있는 리스트이다.
{% highlight javascript %}
let arrayName = ['value1', 'value2', 'value3', ...];
{% endhighlight %}</p>
<ul>
<li>대괄호와 쉼표를 사용해 나타내고, 각 순서는 Index라는 고유 번호를 통해 관리되며, 0부터 시작한다.</li>
<li>배열은 문자 뿐만 아니라, 숫자, 객체, 함수 등이 포함될 수 있으며 하나의 배열 자료형이 통일되지 않아도 된다.</li>
<li>array.length : 배열의 길이</li>
<li>push() : 배열 제일 뒤에 요소를 추가</li>
<li>pop() : 배열 끝 요소 제거</li>
<li>shift() : 배열 맨 앞 요소 제거</li>
<li>unshift() : 배열 맨앞에 요소를 추가
*push 와 unshift는 여러 요소를 한 번에 추가할 수 있다.</li>
</ul>
<p>{% highlight javascript %}
for(let value of array){
code;
}
// for ~ of 구문은 배열 내를 돌며 사용하는 대표적인 구문.
// index를 사용한 기본적인 for문으로 활용했을 때 보다 간단하지만 index를 얻을 수 없는 것이 단점이다.
{% endhighlight %}</p>
4:["$","main",null,{"style":{"maxWidth":760,"margin":"0 auto","padding":"2rem 1rem"},"children":[["$","h1",null,{"style":{"marginBottom":"1rem"},"children":"[JS] JavaScript Basic"}],["$","article",null,{"dangerouslySetInnerHTML":{"__html":"$f"}}],"$L10"]}]
11:I[16794,["/_next/static/chunks/e3afcda4c80f253c.js"],"default"]
10:["$","$L11",null,{}]
a:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
6:null
12:I[29730,["/_next/static/chunks/48796fcff804b0d1.js","/_next/static/chunks/2298bc66cf7be31b.js"],"IconMark"]
8:{"metadata":[["$","title","0",{"children":"Create Next App"}],["$","meta","1",{"name":"description","content":"Generated by create next app"}],["$","link","2",{"rel":"icon","href":"/favicon.ico?favicon.0b3bf435.ico","sizes":"256x256","type":"image/x-icon"}],["$","$L12","3",{}]],"error":null,"digest":"$undefined"}
d:"$8:metadata"
